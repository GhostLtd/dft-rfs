security:
    enable_authenticator_manager: true

    password_hashers:
        App\Entity\PasscodeUser:
            algorithm: 'auto'
            # these users have a short lifespan, and bulk creation of surveys/users needs faster hashing
            cost: 8
        App\Entity\RoRoUser:
            algorithm: 'auto'
        Symfony\Component\Security\Core\User\InMemoryUser:
            algorithm: 'auto'
            cost: 8
        Symfony\Component\Security\Core\User\User:
            algorithm: 'auto'


    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        passcode:
            entity:
                class: App\Entity\PasscodeUser
                property: username
        roro:
            entity:
                class: App\Entity\RoRoUser
                property: username
        null_provider:
            memory:
                users: []

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        roro:
            host: '^%frontend_hostname%$'
            pattern: ^/roro
            lazy: true
            provider: roro
            remember_me:
                secret:   '%kernel.secret%' # required
                lifetime: 604800 # 1 week in seconds
                always_remember_me: true
            login_link:
                check_route: app_roro_login_check
                check_post_only: true
                lifetime: 604800
                max_uses: 1
                signature_properties: ['email']

                failure_handler: App\Security\RoroAuthenticationHelper
                success_handler: App\Security\RoroAuthenticationHelper
            entry_point: App\Security\RoroAuthenticationHelper
            logout:
                path: app_roro_logout
                target: app_roro_login

        main:
            host: '^%frontend_hostname%$'
            lazy: true
            provider: passcode
            custom_authenticator: App\Security\PasscodeAuthenticator
            logout:
                path: app_logout
                target: app_login

        admin:
            host: '^%admin_hostname%$'
            lazy: true
            stateless: true
            custom_authenticators:
                - App\Security\GoogleIapAuthenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    role_hierarchy:
        ROLE_ADMIN_MANAGER: ROLE_ADMIN_USER

        ROLE_ADMIN_FORM_USER: ROLE_ADMIN_USER
        ROLE_ADMIN_FORM_MANAGER: [ROLE_ADMIN_MANAGER, ROLE_ADMIN_FORM_USER]

        ROLE_ADMIN_IAP_USER: ROLE_ADMIN_USER
        ROLE_ADMIN_IAP_MANAGER: [ROLE_ADMIN_MANAGER, ROLE_ADMIN_IAP_USER]

        ROLE_DOMESTIC_SURVEY_USER: ROLE_SURVEY_USER
        ROLE_INTERNATIONAL_SURVEY_USER: ROLE_SURVEY_USER
        ROLE_PRE_ENQUIRY_USER: ROLE_SURVEY_USER

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        ## General
        - { path: '^/login$', roles: PUBLIC_ACCESS, requires_channel: '%env(SECURE_SCHEME)%' }
        - { host: '^%frontend_hostname%$', path: ^/roro/authenticate, roles: PUBLIC_ACCESS, requires_channel: '%env(SECURE_SCHEME)%' }
        - { host: '^%frontend_hostname%$', path: ^/roro/check-email, roles: PUBLIC_ACCESS, requires_channel: '%env(SECURE_SCHEME)%' }
        - { host: '^%frontend_hostname%$', path: ^/roro/login, roles: PUBLIC_ACCESS, requires_channel: '%env(SECURE_SCHEME)%' }

        ## RoRo firewall
        - { host: '^%frontend_hostname%$', path: ^/roro(/.*)?$, roles: ROLE_RORO_USER, requires_channel: '%env(SECURE_SCHEME)%' }

        ## Frontend firewall
        - { host: '^%frontend_hostname%$', path: ^/domestic-survey(/.*)?$, roles: ROLE_DOMESTIC_SURVEY_USER, requires_channel: '%env(SECURE_SCHEME)%' }
        - { host: '^%frontend_hostname%$', path: ^/international-survey(/.*)?$, roles: ROLE_INTERNATIONAL_SURVEY_USER, requires_channel: '%env(SECURE_SCHEME)%' }
        - { host: '^%frontend_hostname%$', path: ^/pre-enquiry(/.*)?$, roles: ROLE_PRE_ENQUIRY_USER, requires_channel: '%env(SECURE_SCHEME)%' }

        - { host: '^%frontend_hostname%$', path: ^/survey-feedback(/.*)?$, roles: ROLE_SURVEY_USER, requires_channel: '%env(SECURE_SCHEME)%' }

        ## Admin firewall
        - { host: '^%admin_hostname%$', roles: ROLE_ADMIN_USER, requires_channel: '%env(SECURE_SCHEME)%' }

        ## Remainder
        - { path: '^/', requires_channel: '%env(SECURE_SCHEME)%' }

