{%- from '@GhostGovUkFrontend/components/macros.html.twig' import buttonLink, summaryListStart, summaryListEnd, summaryListRow -%}
{%- from 'macros.html.twig' import displayHazardousGoods -%}
{%- set showActions = showActions ?? true -%}

{{- summaryListStart({classes: 'govuk-!-margin-bottom-' ~ (marginBottom ?? 9)}) -}}
    {%- set params = {dayNumber: day.number, stopNumber: stop.number} -%}
    {%- set suffixParams = {stopNumber: stop.number} -%}
    {%- set locationsChangeLink = [
        {
            href: url('app_domesticsurvey_daystop_start', params),
            text: 'common.actions.change' | trans,
            visuallyHiddenText: 'domestic.day-view.detailed-change-link-sr-suffix.locations' | trans(suffixParams)
        }
    ] -%}

    {{- summaryListRow({
            key: 'domestic.day-view.start-location' | trans,
            value: (stop.originLocation | formatPotentialPostcode | default('-')) ~ (stop | formatGoodsTransferDetails('loading', ' — ')),
            actions: showActions ? locationsChangeLink : []
    }, showActions) -}}
    {{- summaryListRow({
        key: 'domestic.day-view.destination-location' | trans,
        value: (stop.destinationLocation | formatPotentialPostcode | default('-')) ~ (stop | formatGoodsTransferDetails('unloading', ' — ')),
        actions: showActions ? locationsChangeLink : []
    }, showActions) -}}
    {%- if stop.day.response.survey.isNorthernIreland -%}
        {{- summaryListRow({
            key: 'domestic.day-view.border-crossing' | trans,
            value: stop.borderCrossingLocation | formatPotentialPostcode | default('-'),
            actions: showActions ? locationsChangeLink : []
        }, showActions) -}}
    {%- endif -%}

    {%- set params = params | merge({state: constant('App\\Workflow\\DomesticSurvey\\DayStopState::STATE_DISTANCE_TRAVELLED')}) -%}
    {%- set distanceChangeLink = [
        {
            href: url('app_domesticsurvey_daystop_wizard', params),
            text: 'common.actions.change' | trans,
            visuallyHiddenText: 'domestic.day-view.detailed-change-link-sr-suffix.distance-travelled' | trans(suffixParams)
        }
    ] -%}
    {%- set distanceValue = stop.distanceTravelled.isBlank ?
        '-' :
        ("common.distance.#{stop.distanceTravelled.unit}" | trans({value: stop.distanceTravelled.value}))
    -%}

    {{- summaryListRow({
        key: 'domestic.day-view.distance-travelled' | trans,
            value: distanceValue,
            actions: showActions ? distanceChangeLink : []
    }, showActions) -}}

    {%- set params = params | merge({state: constant('App\\Workflow\\DomesticSurvey\\DayStopState::STATE_GOODS_DESCRIPTION')}) -%}
    {%- set goodsChangeLink = [
        {
            href: url('app_domesticsurvey_daystop_wizard', params),
            text: 'common.actions.change' | trans,
            visuallyHiddenText: 'domestic.day-view.detailed-change-link-sr-suffix.goods-description' | trans(suffixParams)
        }
    ] -%}

    {%- set goodsCarriedValue -%}
        {{- stop | formatGoodsDescription -}}
        {%- if stop.hazardousGoodsCode %} — {{ displayHazardousGoods(stop.hazardousGoodsCode) }}{%- endif -%}
    {%- endset -%}
    {{- summaryListRow({
        key: 'domestic.day-view.goods-carried' | trans,
        value: {html: goodsCarriedValue},
        actions: showActions ? goodsChangeLink : []
    }, showActions) -}}

    {%- if stop.goodsDescription != constant('App\\Entity\\AbstractGoodsDescription::GOODS_DESCRIPTION_EMPTY') -%}
        {%- set cargoChoices = constant('App\\Entity\\CargoType::CHOICES') -%}
        {{- summaryListRow({
            key: 'domestic.day-view.cargo-type' | trans,
            value: choiceLabel(cargoChoices, stop.cargoTypeCode) | trans,
            actions: showActions ? goodsChangeLink : []
        }, showActions) -}}

        {%- set wasLimitedBy -%}
            {%- set factors = stop.wasLimitedBy -%}
            {%- if factors is not empty %} — {{ ('domestic.day-view.limited-by.' ~ (factors | join('-and-'))) | trans }}{% endif -%}
        {%- endset -%}

        {%- set params = params | merge({state: constant('App\\Workflow\\DomesticSurvey\\DayStopState::STATE_GOODS_WEIGHT')}) -%}
        {%- set weightChangeLink = [
            {
                href: url('app_domesticsurvey_daystop_wizard', params),
                text: 'common.actions.change' | trans,
                visuallyHiddenText: 'domestic.day-view.detailed-change-link-sr-suffix.goods-weight' | trans(suffixParams)
            }
        ] -%}
        {{- summaryListRow({
            key: 'domestic.day-view.weight-of-goods.label' | trans,
            value: ("common.weight.kilograms" | trans({value: stop.weightOfGoodsCarried})) ~ wasLimitedBy,
            actions: showActions ? weightChangeLink : []
        }, showActions) -}}
    {%- endif -%}
{{- summaryListEnd() -}}
