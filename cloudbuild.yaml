steps:
    # Start by running some pre-install actions
    - name: node:14
      id: 'pre-install-script'
      entrypoint: sh
      args: ['-c', 'config/gcloud-build/call-remote-action.sh -a pre-install']
      waitFor: ['-']
      env:
          - 'APP_SECRET=${_APP_SECRET}'
          - 'FRONTEND_HOSTNAME=${_BASE_HOSTNAME}'

    # Copy depoyment config files in to root directory (alpine required for gsutil)
    - name: "gcr.io/google.com/cloudsdktool/cloud-sdk:alpine"
      id: 'copy-deploy-files'
      entrypoint: sh
      args: ['-c', 'gsutil rsync config/gcloud-build/all/ . && gsutil rsync config/gcloud-build/$PROJECT_ID/ .']
      waitFor: ['pre-install-script']

    # build assets, and .env.local file
    - name: node:14
      id: 'yarn-build'
      entrypoint: sh
      args: ['-c', 'yarn install --frozen-lockfile && yarn run deploy-build && yarn run build-env-subs']
      env:
          - 'APP_ENV=prod'
          - 'FRONTEND_HOSTNAME=${_BASE_HOSTNAME}'
          - 'ADMIN_HOSTNAME=admin.${_BASE_HOSTNAME}'
          - 'DATABASE_URL=${_DATABASE_URL}'
          - 'ALPHAGOV_NOTIFY_API_KEY=${_ALPHAGOV_NOTIFY_API_KEY}'
          - 'APP_SECRET=${_APP_SECRET}'
          - 'APP_FEATURES=${_APP_FEATURES}'
          - 'GOOGLE_BUCKET_EXPORT=${_GOOGLE_BUCKET_EXPORT}'
      waitFor: ['copy-deploy-files']

    ## The app deployment will not run `composer install` if the composer.lock file has not changed
    ## meaning that post install scripts, or even update scripts to not get run
    # deploy default service
    - name: "gcr.io/cloud-builders/gcloud"
      id: 'deploy-default-service'
      args: ["app", "deploy", "app.default.yaml", "--ignore-file=.gcloudignore", "--no-cache"]
      waitFor: ['yarn-build']
    # deploy admin service
    - name: "gcr.io/cloud-builders/gcloud"
      id: 'deploy-admin-service'
      args: ["app", "deploy", "app.admin.yaml", "--ignore-file=.gcloudignore", "--no-cache"]
      waitFor: ['yarn-build']


    # Finish up by calling the post-install-script
    - name: node:14
      id: 'post-install-script'
      entrypoint: sh
      args: ['-c', 'config/gcloud-build/call-remote-action.sh -a post-install']
      waitFor: ['deploy-default-service', 'deploy-admin-service']
      env:
          - 'APP_SECRET=${_APP_SECRET}'
          - 'FRONTEND_HOSTNAME=${_BASE_HOSTNAME}'


    ## https://stackoverflow.com/questions/58893845/cloud-build-permission-denied-when-deploy-to-cloud-run-with-set-sql-instance
    # the cloud build service account needs iam.serviceAccountUser role to perform this - but we don't have permission to add that role!
    # deploy cron jobs
    - name: "gcr.io/cloud-builders/gcloud"
      id: 'deploy-cron'
      args: ["app", "deploy", "cron.yaml"]
      waitFor: ['deploy-default-service', 'deploy-admin-service']

timeout: "900s"
